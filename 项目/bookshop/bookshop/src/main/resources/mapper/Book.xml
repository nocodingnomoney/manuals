<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scut.dao.BookDAO">
    <resultMap id="bookResultMap" type="Book">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="bookType" property="bookType" />
        <result column="price" property="price" />
        <result column="originalPrice" property="originalPrice" />
        <result column="author" property="author" />
        <result column="press" property="press" />
        <result column="version" property="version" />
        <result column="degree" property="degree" />
        <result column="publishDate" property="publishDate" />
        <result column="description" property="description" />
        <result column="date" property="date" />
        <association property="user" javaType="User">
            <id column="id" property="id" />
        </association>
        <association property="category" javaType="Category">
            <id column="cid" property="id" />
        </association>
    </resultMap>
    
    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="Book" >
        insert into book
        ( name,bookType,author,cid,originalPrice,price,press,publishDate,version,degree,description,uid,date)
        values
        (#{name},#{bookType},#{author},#{category.id},#{originalPrice},#{price},#{press},#{publishDate},#{version},#{degree},#{description},#{user.id},#{date})
    </insert>

    <delete id="delete" parameterType="_int" >
        delete from book where id= #{id}
    </delete>

    <select id="get" parameterType="_int" resultMap="bookResultMap">
        select * from   book  where id= #{id}
    </select>

    <update id="update" parameterType="Book" >
        update book set name=#{name},cid=#{category.id},originalPrice=#{originalPrice},price=#{price},
        press=#{press},publishDate=#{publishDate},version=#{version},degree=#{degree},description=#{description} where id=#{id}
    </update>

    <select id="list" resultType="Book">
        select * from  book
    </select>

    <select id="listByBookType" resultType="Book">
        select * from book where bookType=#{bookType} order by date desc
    </select>

    <select id="count" resultType="_int">
        select count(id) from book
    </select>

    <select id="getListByCategoryId" resultMap="bookResultMap">
        select * from book where cid = #{cid} and bookType = #{bookType} order by date desc
        <if test="start != -1">
          limit #{start},#{count}
        </if>
    </select>

    <select id="getListByUserId" resultType="Book">
        select * from book where uid = #{uid} and bookType = #{bookType} order by date desc
    </select>

    <select id="getUserId" resultType="_int">
        select uid from book where id = #{id}
    </select>

    <select id="selectByKeyWord" parameterType="String" resultType="Book">
        select * from book where name like #{keyword}
    </select>
</mapper>